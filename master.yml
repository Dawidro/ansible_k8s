---
- hosts: master
  become: true
  roles:
    - ufw-role
  vars:
    ufw_rules:
      - rule: allow
        to_port: 6443
        protocol: tcp
        comment: 'allow incoming connection on 6443'
      - rule: allow
        to_port: 2379
        protocol: tcp
        comment: 'allow incoming connection on 2379'
      - rule: allow
        to_port: 2380
        protocol: tcp
        comment: 'allow incoming connection on 2380'
      - rule: allow
        to_port: 10250
        protocol: tcp
        comment: 'allow incoming connection on 10250'
      - rule: allow
        to_port: 10252
        protocol: tcp
        comment: 'allow incoming connection on 10252'

- hosts: master
  become: true
  tasks:
    - name: Install Kubernetes binaries
      apt:
        name: "{{ packages }}"
        state: present
        update_cache: yes
      vars:
        packages:
          - kubelet
          - kubeadm
          - kubectl

#    - name: Configure node ip
#      lineinfile:
#        path: /etc/default/kubelet
#        line: KUBELET_EXTRA_ARGS=--node-ip=192.168.122.101

name: install Pod network
      become: yes
      become_user: ubuntu    - name: Initialize the Kubernetes cluster using kubeadm
      command: kubeadm init --apiserver-advertise-address="192.168.122.101" --apiserver-cert-extra-sans="192.168.122.101"  --node-name master --pod-network-cidr=10.100.0.0/16


    - name: Restart kubelet
      service:
        name: kubelet
        daemon_reload: yes
        state: restarted


    - name: create .kube directory
      become: yes
      file:
        path: /home/vmadmin/.kube
        state: directory
        mode: 0755


    - name: copies admin.conf to user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/vmadmin/.kube/config
        remote_src: yes
        owner: vmadmin

  - hosts: master
    become: true
    become_user: vmadmin
    - name: install Pod network
      become: yes
      command: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml
      args:
        chdir: /home/vmadmin

    - name: Get the token for joining the worker nodes
      become: yes
      shell: kubeadm token create  --print-join-command
      register: kubernetes_join_command

    - name: Copy join command to local file.
      become: yes
      local_action: copy content="{{ kubernetes_join_command.stdout_lines[0] }}" dest="/tmp/kubernetes_join_command" mode=0777
