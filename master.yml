---
- hosts: master
  become: true
  roles:
    - ufw
  vars:
    ufw_rules:
      - rule: allow
        to_port: 6443
        protocol: tcp
        comment: 'allow incoming connection on 6443'
      - rule: allow
        to_port: 2379
        protocol: tcp
        comment: 'allow incoming connection on 2379'
      - rule: allow
        to_port: 2380
        protocol: tcp
        comment: 'allow incoming connection on 2380'
      - rule: allow
        to_port: 10250
        protocol: tcp
        comment: 'allow incoming connection on 10250'
      - rule: allow
        to_port: 10252
        protocol: tcp
        comment: 'allow incoming connection on 10252'

  - name: Install Kubernetes binaries
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - kubelet 
        - kubeadm 
        - kubectl

  - name: Configure node ip
    lineinfile:
      path: /etc/default/kubelet
      line: KUBELET_EXTRA_ARGS=--node-ip=192.168.122.101

  - name: Restart kubelet
    service:
      name: kubelet
      daemon_reload: yes

  - name: Initialize the Kubernetes cluster using kubeadm
    command: kubeadm init --apiserver-advertise-address="192.168.122.101" --apiserver-cert-extra-sans="192.168.122.101"  --node-name k8s-master --pod-network-cidr=10.100.0.0/16
      state: restarted

  - name: Setup kubeconfig for vmadmin user
    command: "{{ item }}"
    with_items:
     - mkdir -p $HOME/.kube
     - sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
     - sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config

  - name: install Pod network
    become: yes
    become_user: kube
    shell: kubectl apply -f https://docs.projectcalico.org/manifests/calico.yaml 
    args:
      chdir: $HOME

  - name: Get the token for joining the worker nodes
    become: yes
    shell: kubeadm token create  --print-join-command
    register: kubernetes_join_command

  - debug:
    msg: "{{ kubernetes_join_command.stdout }}"

  - name: Copy join command to local file.
    become: yes
    local_action: copy content="{{ kubernetes_join_command.stdout_lines[0] }}" dest="/tmp/kubernetes_join_command" mode=0777
